1. 엔터티의 개념
  엔터티 Entity (실체, 객체) - 업무에 필요하고 유용한 정보를 저장하고 관리하기 위한 집합적인 것 thing
  인스턴스의 집합

2. 엔터티와 인스턴스에 대한 내용과 표기법
  사각형
  속성의 표현방법이 좀 다를뿐?

3. 엔터티의 특징
  1)유일한 식별자(Unique Identifier)에 의해 식별 가능
    - 두 번째는 식별자(Unique Identifier)에 의해 식별이 가능해야 한다는 점이다. 
      어떤 엔터티이건 임의의 식별자(일련번호)를 부여하여 유일하게 만들 수는 있지만, 
      엔터티를 도출하는 경우에 각각의 업무적으로 의미를 가지는 인스턴스가 식별자에 의해 한 개씩만 존재하는지 검증해 보아야 한다.

      유일한 식별자는 그 엔터티의 인스턴스만의 고유한 이름이다. 
      두 개 이상의 엔터티를 대변하면 그 식별자는 잘못 설계된 것이다. 예를 들어 직원을 구분할 수 있는 방법은 이름이나 사원번호가 될 수가 있다. 
      그러나 이름은 동명이인(同名異人)이 될 수 있으므로 유일하게 식별될 수 없다. 
      사원번호는 회사에 입사한 사람에게 고유하게 부여된 번호이므로 유일한 식별자가 될 수 있는 것이다.
  2)두 개 이상의 영속적으로 존재하는 인스턴스의 집합
  3)반드시 속성(Attributes)이 있어야 한다
    - 다섯 번째는 엔터티에는 반드시 속성(Attributes)이 포함되어야 한다는 점이다. 
      속성을 포함하지 않고 엔터티의 이름만 가지고 있는 경우는 관계가 생략되어 있거나 업무 분석이 미진하여 속성정보가 누락되는 경우에 해당한다. 
      또한 주식별자만 존재하고 일반속성은 전혀 없는 경우도 마찬가지로 적절한 엔터티라고 할 수 없다. 
    - 단, 예외적으로 관계엔터티(Associative Entity)의 경우는 주식별자 속성만 가지고 있어도 엔터티로 인정한다.
  4)다른 엔터티와 한 개 이상의 관계가 있어야 함
    - 단, 데이터 모델링을 하면서 관계를 생략하여 표현해야 하는 경우는 다음과 같은 '통계성 엔터티 도출', '코드성 엔터티 도출', '시스템 처리시 내부 필요에 의한 엔터티 도출'과 같은 경우이다.
        (1) 통계를 위한 엔터티: 업무진행 엔터티로부터 통계업무만(Read Only)을 위해 별도로 엔터티를 다시 정의하게 되므로 엔터티간의 관계가 생략되는 경우에 해당한다.
        (2) 코드를 위한 엔터티: 너무 많은 엔터티와 엔터티간의 관계 설정으로 인해 데이터 모델의 읽기효율성(Readability)이 저하되어 도저히 모델링 작업을 진행할 수 없게 된다. 또한 코드성 엔터티는 물리적으로 테이블과 프로그램 구현 이후에도 외부키에 의한 참조무결성을 체크하기 위한 규칙을 데이터베이스 기능에 맡기지 않는 경우가 대부분이기 때문에 논리적으로나 물리적으로 관계를 설정할 이유가 없다.
        (3) 시스템 처리시 내부 필요에 의한 엔터티(예를 들어, 트랜잭션 로그 테이블 등):트랜잭션이 업무적으로 연관된 테이블과 관계 설정이 필요하지만 이 역시 업무적인 필요가 아니고 시스템 내부적인 필요에 의해 생성된 엔터티이므로 관계를 생략하게 된다.
  5)해당 업무에서 관리하고자 하는 정보여야 하고, 업무 프로세스에 의해 이용되어야 함
    -데이터 모델링을 할 때 미처 발견하지 못하다가 프로세스 모델링을 하면서 데이터 모델과 검증을 하거나, 상관 모델링을 할 때 엔터티와 단위프로세스를 교차 점검하면서 문제점이 도출된다.

4.
